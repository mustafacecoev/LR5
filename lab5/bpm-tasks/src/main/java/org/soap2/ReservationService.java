
package org.soap2;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ReservationService", targetNamespace = "http://asu.dgtu.donetsk.ua/ex/students")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReservationService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<org.soap2.ReserveCarsResponse>
     */
    @WebMethod(operationName = "ReserveCars")
    @RequestWrapper(localName = "ReserveCars", targetNamespace = "http://asu.dgtu.donetsk.ua/ex/students", className = "org.soap2.ReserveCars")
    @ResponseWrapper(localName = "ReserveCarsResponse", targetNamespace = "http://asu.dgtu.donetsk.ua/ex/students", className = "org.soap2.ReserveCarsResponse")
    public Response<ReserveCarsResponse> reserveCarsAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "ReserveCars")
    @RequestWrapper(localName = "ReserveCars", targetNamespace = "http://asu.dgtu.donetsk.ua/ex/students", className = "org.soap2.ReserveCars")
    @ResponseWrapper(localName = "ReserveCarsResponse", targetNamespace = "http://asu.dgtu.donetsk.ua/ex/students", className = "org.soap2.ReserveCarsResponse")
    public Future<?> reserveCarsAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ReserveCarsResponse> asyncHandler);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.soap2.UserReserve
     */
    @WebMethod(operationName = "ReserveCars")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ReserveCars", targetNamespace = "http://asu.dgtu.donetsk.ua/ex/students", className = "org.soap2.ReserveCars")
    @ResponseWrapper(localName = "ReserveCarsResponse", targetNamespace = "http://asu.dgtu.donetsk.ua/ex/students", className = "org.soap2.ReserveCarsResponse")
    @Action(input = "http://asu.dgtu.donetsk.ua/ex/students/ReservationService/ReserveCarsRequest", output = "http://asu.dgtu.donetsk.ua/ex/students/ReservationService/ReserveCarsResponse")
    public UserReserve reserveCars(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

}
